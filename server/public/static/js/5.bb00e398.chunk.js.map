{"version":3,"sources":["components/shared/Button.js","components/shared/Card.js","components/shared/Input.js","pages/Join.js"],"names":["Button","props","Abutton","styled","button","type","onClick","children","Container","div","Card","Label","label","Ainput","input","Input","Fragment","required","placeholder","onChange","value","key","id","minlength","Join","auth","useContext","AuthContext","useState","isLoginMode","setLoginMode","idValue","setIdValue","nameValue","setNameValue","passwordValue","setPasswordValue","error","setError","history","useHistory","CenterContainer","style","color","e","target","preventDefault","axios","post","process","userid","password","then","res","console","log","data","login","user","_id","token","push","catch","response","name","split","prevMode"],"mappings":"mWAqBeA,IAlBA,SAAAC,GACb,IAAMC,EAAUC,IAAOC,OAAV,KASb,OAAQ,kBAACF,EAAD,CACRG,KAAMJ,EAAMI,KACZC,QAASL,EAAMK,SAEZL,EAAMM,Y,oNCdX,IAAMC,E,KAAYL,EAAOM,IAAV,KAeAC,IARF,SAAAT,GACX,OACE,kBAACO,EAAD,KACGP,EAAMM,Y,8WCVb,IAiBMI,EAAQR,IAAOS,MAAV,KAMLC,EAASV,IAAOW,MAAV,KAMGC,EA7BD,SAAAd,GAEZ,OAAO,kBAAC,IAAMe,SAAP,KACL,kBAACL,EAAD,KAAQV,EAAMW,OACd,kBAACC,EAAD,CACER,KAAMJ,EAAMI,KACZY,SAAUhB,EAAMgB,SAChBC,YAAajB,EAAMiB,YACnBC,SAAUlB,EAAMkB,SAChBC,MAAOnB,EAAMmB,MACbC,IAAKpB,EAAMW,MACXU,GAAIrB,EAAMW,MACVW,UAAWtB,EAAMsB,c,QCoFRC,UAzFF,WACX,IAAMC,EAAOC,qBAAWC,KADP,EAEmBC,oBAAS,GAF5B,mBAEVC,EAFU,KAEGC,EAFH,OAGaF,mBAAS,IAHtB,mBAGVG,EAHU,KAGDC,EAHC,OAIiBJ,mBAAS,IAJ1B,mBAIVK,EAJU,KAICC,EAJD,OAKyBN,mBAAS,IALlC,mBAKVO,EALU,KAKKC,EALL,OAMSR,mBAAS,IANlB,mBAMVS,EANU,KAMHC,EANG,KAOXC,EAAUC,cAqChB,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC/B,EAAA,EAAD,KACE,4BAAKmB,EAAc,SAAW,WAC7BQ,GAAS,uBAAGK,MAAO,CAAEC,MAAO,QAAUN,GACvC,6BACA,8BACE,kBAAC,EAAD,CACEzB,MAAM,KACNP,KAAK,OACLe,MAAOW,EACPZ,SAAU,SAACyB,GAAD,OAAOZ,EAAWY,EAAEC,OAAOzB,QACrCG,UAAW,EACXN,UAAQ,KAERY,GACA,kBAAC,EAAD,CACEjB,MAAM,OACNP,KAAK,OACLe,MAAOa,EACPd,SAAU,SAACyB,GAAD,OAAOV,EAAaU,EAAEC,OAAOzB,QACvCG,UAAW,EACXN,UAAQ,IAGZ,kBAAC,EAAD,CACEL,MAAM,WACNP,KAAK,WACLe,MAAOe,EACPhB,SAAU,SAACyB,GAAD,OAAOR,EAAiBQ,EAAEC,OAAOzB,QAC3CG,UAAW,EACXN,UAAQ,IAEV,kBAACjB,EAAA,EAAD,CAAQK,KAAK,SAASC,QA/Df,SAACsC,GACdA,EAAEE,iBACEjB,EACFkB,IACGC,KAAKC,uCAAuD,CAC3DC,OAAQnB,EACRoB,SAAUhB,IAEXiB,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChB/B,EAAKgC,MAAMJ,EAAIG,KAAKE,KAAKC,IAAKN,EAAIG,KAAKE,KAAKR,OAAQG,EAAIG,KAAKI,OAC7DrB,EAAQsB,KAAK,WAEdC,OAAM,SAACT,GAAD,OAASf,EAASe,EAAIU,SAASP,KAAKnB,UAE7CU,IACGC,KAAKC,wCAAwD,CAC5DC,OAAQnB,EACRiC,KAAM/B,EACNkB,SAAUhB,IAEXiB,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChB/B,EAAKgC,MAAMJ,EAAIG,KAAKE,KAAKC,IAAKN,EAAIG,KAAKE,KAAKR,OAAQG,EAAIG,KAAKI,OAC7DrB,EAAQsB,KAAK,WAEdC,OAAM,SAACT,GAAD,OAASf,EAASe,EAAIU,SAASP,KAAKnB,MAAM4B,MAAM,SAAS,SAsC3DpC,EAAc,QAAU,WAG7B,kBAAC7B,EAAA,EAAD,CAAQM,QAxEK,WACjBwB,GAAa,SAACoC,GAAD,OAAeA,KAC5B5B,EAAS,QAsEL,aACaT,EAAc,UAAY","file":"static/js/5.bb00e398.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = props => {\r\n  const Abutton = styled.button`\r\n    padding: 1em;\r\n    margin: 0.5em auto;\r\n    border-radius: 5px;\r\n    border: 1px solid salmon;\r\n    background-color: white;\r\n    font-size: 1em;\r\n  `\r\n\r\n  return (<Abutton\r\n  type={props.type}\r\n  onClick={props.onClick}\r\n  >\r\n    {props.children}\r\n  </Abutton>);\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\nborder: 3px dotted salmon;\r\nborder-radius: 10px;\r\npadding: 1em;\r\nmargin: 0 auto;\r\n`\r\n\r\nconst Card = props => {\r\n  return (\r\n    <Container>\r\n      {props.children}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Input = props => {\r\n\r\n  return <React.Fragment>\r\n    <Label>{props.label}</Label>\r\n    <Ainput \r\n      type={props.type} \r\n      required={props.required} \r\n      placeholder={props.placeholder}\r\n      onChange={props.onChange}\r\n      value={props.value}\r\n      key={props.label}\r\n      id={props.label}\r\n      minlength={props.minlength}\r\n    />\r\n  </React.Fragment>\r\n};\r\n\r\nconst Label = styled.label`\r\nwidth: 100%;\r\nfloat: left;\r\ntext-align: left;\r\n`\r\n\r\nconst Ainput = styled.input`\r\nwidth: 100%;\r\nfloat: left;\r\nmargin-bottom: 1em;\r\n`\r\n\r\nexport default Input;","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { AuthContext } from \"../utils/AuthContext\";\r\nimport CenterContainer from \"../components/shared/CenterContainer\";\r\nimport Card from \"../components/shared/Card\";\r\nimport Input from \"../components/shared/Input\";\r\nimport Button from \"../components/shared/Button\";\r\n\r\nconst Join = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setLoginMode] = useState(true);\r\n  const [idValue, setIdValue] = useState(\"\");\r\n  const [nameValue, setNameValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const switchMode = () => {\r\n    setLoginMode((prevMode) => !prevMode);\r\n    setError(null);\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (isLoginMode) {\r\n      axios\r\n        .post(process.env.REACT_APP_BACKEND_URL + \"/api/user/login\", {\r\n          userid: idValue,\r\n          password: passwordValue,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          auth.login(res.data.user._id, res.data.user.userid, res.data.token);\r\n          history.push(\"/all\");\r\n        })\r\n        .catch((res) => setError(res.response.data.error));\r\n    } else {\r\n      axios\r\n        .post(process.env.REACT_APP_BACKEND_URL + \"/api/user/signin\", {\r\n          userid: idValue,\r\n          name: nameValue,\r\n          password: passwordValue,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          auth.login(res.data.user._id, res.data.user.userid, res.data.token);\r\n          history.push(\"/all\");\r\n        })\r\n        .catch((res) => setError(res.response.data.error.split(\"Path \")[1]));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CenterContainer>\r\n      <Card>\r\n        <h2>{isLoginMode ? \"Log In\" : \"Sign In\"}</h2>\r\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n        <hr />\r\n        <form>\r\n          <Input\r\n            label=\"ID\"\r\n            type=\"text\"\r\n            value={idValue}\r\n            onChange={(e) => setIdValue(e.target.value)}\r\n            minlength={4}\r\n            required\r\n          />\r\n          {!isLoginMode && (\r\n            <Input\r\n              label=\"Name\"\r\n              type=\"text\"\r\n              value={nameValue}\r\n              onChange={(e) => setNameValue(e.target.value)}\r\n              minlength={2}\r\n              required\r\n            />\r\n          )}\r\n          <Input\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={passwordValue}\r\n            onChange={(e) => setPasswordValue(e.target.value)}\r\n            minlength={6}\r\n            required\r\n          />\r\n          <Button type=\"submit\" onClick={submit}>\r\n            {isLoginMode ? \"Login\" : \"Signin\"}\r\n          </Button>\r\n        </form>\r\n        <Button onClick={switchMode}>\r\n          Switch to {isLoginMode ? \"Sign in\" : \"Log in\"}\r\n        </Button>\r\n      </Card>\r\n    </CenterContainer>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n"],"sourceRoot":""}